/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { RadaDescriptor } from "../RadaDescriptor";

export class RadaDescriptor__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: RadaDescriptorLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      RadaDescriptor__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: RadaDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e1d8844a0810dc0e87a665b1f2b5fa7c69\\$__", "g"),
      linkLibraryAddresses["__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RadaDescriptor> {
    return super.deploy(overrides || {}) as Promise<RadaDescriptor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RadaDescriptor {
    return super.attach(address) as RadaDescriptor;
  }
  connect(signer: Signer): RadaDescriptor__factory {
    return super.connect(signer) as RadaDescriptor__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RadaDescriptor {
    return new Contract(address, _abi, signerOrProvider) as RadaDescriptor;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "DataURIToggled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PartsLocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accessories",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_accessory",
        type: "bytes",
      },
    ],
    name: "addAccessory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_background",
        type: "string",
      },
    ],
    name: "addBackground",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_body",
        type: "bytes",
      },
    ],
    name: "addBody",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_paletteIndex",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_color",
        type: "string",
      },
    ],
    name: "addColorToPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_glasses",
        type: "bytes",
      },
    ],
    name: "addGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_head",
        type: "bytes",
      },
    ],
    name: "addHead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_accessories",
        type: "bytes[]",
      },
    ],
    name: "addManyAccessories",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "_backgrounds",
        type: "string[]",
      },
    ],
    name: "addManyBackgrounds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_bodies",
        type: "bytes[]",
      },
    ],
    name: "addManyBodies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "paletteIndex",
        type: "uint8",
      },
      {
        internalType: "string[]",
        name: "newColors",
        type: "string[]",
      },
    ],
    name: "addManyColorsToPalette",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_glasses",
        type: "bytes[]",
      },
    ],
    name: "addManyGlasses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_heads",
        type: "bytes[]",
      },
    ],
    name: "addManyHeads",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "backgroundCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "backgrounds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bodies",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bodyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "dataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "generateSVGImage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "genericDataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "glasses",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glassesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "heads",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "palettes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint48",
            name: "background",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "body",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "accessory",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "head",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "glasses",
            type: "uint48",
          },
        ],
        internalType: "struct INounsSeeder.Seed",
        name: "seed",
        type: "tuple",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6123178061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063715018a61161010457806391b7916a116100a2578063cc2aa09111610071578063cc2aa091146103d8578063eba81806146103e0578063f2fde38b146103e8578063f9da8863146103fb57600080fd5b806391b7916a1461038c5780639a7962051461039f578063a51e4124146103b2578063b982d1b9146103c557600080fd5b8063839644da116100de578063839644da1461032b57806387db11bd1461033e5780638a85a1e8146103515780638da5cb5b1461036457600080fd5b8063715018a6146102fd5780637a34aad3146103055780637ca942101461031857600080fd5b806344cee73c1161017c5780635a503f131161014b5780635a503f13146102b15780635e70664c146102c4578063615bda10146102d7578063638ac270146102ea57600080fd5b806344cee73c1461027b5780634531c0a81461028e5780634daebac214610296578063598fa9da1461029e57600080fd5b80632715c90e116101b85780632715c90e146102305780632ea04300146102435780633cfdafd3146102565780634479cef21461026957600080fd5b80630475d863146101df57806304bde4dd146101f457806317b552ab1461021d575b600080fd5b6101f26101ed366004611b3e565b61040e565b005b610207610202366004611cb5565b6104c8565b6040516102149190611f0e565b60405180910390f35b6101f261022b366004611b80565b610574565b6101f261023e366004611b80565b6105e9565b610207610251366004611c99565b61065a565b610207610264366004611cce565b6107e1565b6006545b604051908152602001610214565b610207610289366004611cb5565b6107ed565b60025461026d565b60045461026d565b6102076102ac366004611d94565b6107fd565b6102076102bf366004611cb5565b610835565b6101f26102d2366004611b80565b610845565b6101f26102e5366004611b80565b6108b6565b6102076102f8366004611cce565b610927565b6101f2610993565b6101f2610313366004611b3e565b610a06565b610207610326366004611cb5565b610ab6565b6101f2610339366004611cfb565b610ac6565b61020761034c366004611c24565b610c13565b6101f261035f366004611b3e565b610da8565b60005460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610214565b6101f261039a366004611b3e565b610e58565b6101f26103ad366004611b80565b610f08565b6101f26103c0366004611b3e565b610f79565b6102076103d3366004611cb5565b611029565b60055461026d565b60035461026d565b6101f26103f6366004611b08565b611039565b6101f2610409366004611d4e565b611135565b60005473ffffffffffffffffffffffffffffffffffffffff16331461047a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60005b818110156104c3576104b183838381811061049a5761049a612283565b90506020028101906104ac919061201b565b61122f565b806104bb816121d8565b91505061047d565b505050565b600281815481106104d857600080fd5b9060005260206000200160009150905080546104f390612184565b80601f016020809104026020016040519081016040528092919081815260200182805461051f90612184565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b505050505081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b6105e5828261122f565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b6105e5828261126c565b606060006040518060400160405280610672856112a9565b81526020016002856000015165ffffffffffff168154811061069657610696612283565b9060005260206000200180546106ab90612184565b80601f01602080910402602001604051908101604052809291908181526020018280546106d790612184565b80156107245780601f106106f957610100808354040283529160200191610724565b820191906000526020600020905b81548152906001019060200180831161070757829003601f168201915b5050505050815250905073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__6366b8c2418260016040518363ffffffff1660e01b8152600401610768929190611f21565b60006040518083038186803b15801561078057600080fd5b505af4158015610794573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107da9190810190611bb6565b9392505050565b60606107da8383610927565b600381815481106104d857600080fd5b6001602052816000526040600020818154811061081957600080fd5b906000526020600020016000915091505080546104f390612184565b600581815481106104d857600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff1633146108ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b6105e58282611622565b60005473ffffffffffffffffffffffffffffffffffffffff16331461091d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b6105e5828261165f565b606060006109348461169c565b90506000816040516020016109499190611e5d565b604051602081830303815290604052905060008260405160200161096d9190611ea2565b6040516020818303038152906040529050610989828287610c13565b9695505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b610a0460006117d6565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610a6d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60005b818110156104c357610aa4838383818110610a8d57610a8d612283565b9050602002810190610a9f919061201b565b61184b565b80610aae816121d8565b915050610a70565b600481815481106104d857600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff163314610b2d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60ff831660009081526001602052604090205461010090610b4f908390612115565b1115610bc35760405162461bcd60e51b815260206004820152602160248201527f50616c65747465732063616e206f6e6c7920686f6c642032353620636f6c6f7260448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610471565b60005b81811015610c0d57610bfb84848484818110610be457610be4612283565b9050602002810190610bf6919061201b565b611888565b80610c05816121d8565b915050610bc6565b50505050565b606060006040518060800160405280868152602001858152602001610c37856112a9565b81526020016002856000015165ffffffffffff1681548110610c5b57610c5b612283565b906000526020600020018054610c7090612184565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9c90612184565b8015610ce95780601f10610cbe57610100808354040283529160200191610ce9565b820191906000526020600020905b815481529060010190602001808311610ccc57829003601f168201915b5050505050815250905073__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__63bf1deae28260016040518363ffffffff1660e01b8152600401610d2d929190611f88565b60006040518083038186803b158015610d4557600080fd5b505af4158015610d59573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d9f9190810190611bb6565b95945050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e0f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60005b818110156104c357610e46838383818110610e2f57610e2f612283565b9050602002810190610e41919061201b565b61126c565b80610e50816121d8565b915050610e12565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ebf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60005b818110156104c357610ef6838383818110610edf57610edf612283565b9050602002810190610ef1919061201b565b611622565b80610f00816121d8565b915050610ec2565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f6f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b6105e5828261184b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fe05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60005b818110156104c35761101783838381811061100057611000612283565b9050602002810190611012919061201b565b61165f565b80611021816121d8565b915050610fe3565b600681815481106104d857600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff1633146110a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b73ffffffffffffffffffffffffffffffffffffffff81166111295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610471565b611132816117d6565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461119c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610471565b60ff83811660009081526001602052604090205411156112245760405162461bcd60e51b815260206004820152602160248201527f50616c65747465732063616e206f6e6c7920686f6c642032353620636f6c6f7260448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610471565b6104c3838383611888565b600480546001810182556000919091526104c3907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0183836118b0565b600380546001810182556000919091526104c3907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0183836118b0565b60408051600480825260a0820190925260609160009190816020015b60608152602001906001900390816112c55790505090506003836020015165ffffffffffff16815481106112fb576112fb612283565b90600052602060002001805461131090612184565b80601f016020809104026020016040519081016040528092919081815260200182805461133c90612184565b80156113895780601f1061135e57610100808354040283529160200191611389565b820191906000526020600020905b81548152906001019060200180831161136c57829003601f168201915b5050505050816000815181106113a1576113a1612283565b60200260200101819052506004836040015165ffffffffffff16815481106113cb576113cb612283565b9060005260206000200180546113e090612184565b80601f016020809104026020016040519081016040528092919081815260200182805461140c90612184565b80156114595780601f1061142e57610100808354040283529160200191611459565b820191906000526020600020905b81548152906001019060200180831161143c57829003601f168201915b50505050508160018151811061147157611471612283565b60200260200101819052506005836060015165ffffffffffff168154811061149b5761149b612283565b9060005260206000200180546114b090612184565b80601f01602080910402602001604051908101604052809291908181526020018280546114dc90612184565b80156115295780601f106114fe57610100808354040283529160200191611529565b820191906000526020600020905b81548152906001019060200180831161150c57829003601f168201915b50505050508160028151811061154157611541612283565b60200260200101819052506006836080015165ffffffffffff168154811061156b5761156b612283565b90600052602060002001805461158090612184565b80601f01602080910402602001604051908101604052809291908181526020018280546115ac90612184565b80156115f95780601f106115ce576101008083540402835291602001916115f9565b820191906000526020600020905b8154815290600101906020018083116115dc57829003601f168201915b50505050508160038151811061161157611611612283565b602090810291909101015292915050565b600280546001810182556000919091526104c3907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0183836118b0565b600680546001810182556000919091526104c3907ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0183836118b0565b6060816116dc57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561170657806116f0816121d8565b91506116ff9050600a8361212d565b91506116e0565b60008167ffffffffffffffff811115611721576117216122b2565b6040519080825280601f01601f19166020018201604052801561174b576020820181803683370190505b5090505b84156117ce57611760600183612141565b915061176d600a86612211565b611778906030612115565b60f81b81838151811061178d5761178d612283565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506117c7600a8661212d565b945061174f565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600580546001810182556000919091526104c3907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00183836118b0565b60ff831660009081526001602081815260408320805492830181558352909120610c0d910183835b8280546118bc90612184565b90600052602060002090601f0160209004810192826118de5760008555611942565b82601f10611915578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611942565b82800160010185558215611942579182015b82811115611942578235825591602001919060010190611927565b5061194e929150611952565b5090565b5b8082111561194e5760008155600101611953565b60008083601f84011261197957600080fd5b50813567ffffffffffffffff81111561199157600080fd5b6020830191508360208260051b85010111156119ac57600080fd5b9250929050565b60008083601f8401126119c557600080fd5b50813567ffffffffffffffff8111156119dd57600080fd5b6020830191508360208285010111156119ac57600080fd5b600082601f830112611a0657600080fd5b8135611a19611a14826120cf565b612080565b818152846020838601011115611a2e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060a08284031215611a5d57600080fd5b60405160a0810181811067ffffffffffffffff82111715611a8057611a806122b2565b604052905080611a8f83611adc565b8152611a9d60208401611adc565b6020820152611aae60408401611adc565b6040820152611abf60608401611adc565b6060820152611ad060808401611adc565b60808201525092915050565b803565ffffffffffff81168114611af257600080fd5b919050565b803560ff81168114611af257600080fd5b600060208284031215611b1a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107da57600080fd5b60008060208385031215611b5157600080fd5b823567ffffffffffffffff811115611b6857600080fd5b611b7485828601611967565b90969095509350505050565b60008060208385031215611b9357600080fd5b823567ffffffffffffffff811115611baa57600080fd5b611b74858286016119b3565b600060208284031215611bc857600080fd5b815167ffffffffffffffff811115611bdf57600080fd5b8201601f81018413611bf057600080fd5b8051611bfe611a14826120cf565b818152856020838501011115611c1357600080fd5b610d9f826020830160208601612158565b600080600060e08486031215611c3957600080fd5b833567ffffffffffffffff80821115611c5157600080fd5b611c5d878388016119f5565b94506020860135915080821115611c7357600080fd5b50611c80868287016119f5565b925050611c908560408601611a4b565b90509250925092565b600060a08284031215611cab57600080fd5b6107da8383611a4b565b600060208284031215611cc757600080fd5b5035919050565b60008060c08385031215611ce157600080fd5b82359150611cf28460208501611a4b565b90509250929050565b600080600060408486031215611d1057600080fd5b611d1984611af7565b9250602084013567ffffffffffffffff811115611d3557600080fd5b611d4186828701611967565b9497909650939450505050565b600080600060408486031215611d6357600080fd5b611d6c84611af7565b9250602084013567ffffffffffffffff811115611d8857600080fd5b611d41868287016119b3565b60008060408385031215611da757600080fd5b611db083611af7565b946020939093013593505050565b600081518084526020808501808196508360051b8101915082860160005b85811015611e06578284038952611df4848351611e13565b98850198935090840190600101611ddc565b5091979650505050505050565b60008151808452611e2b816020860160208601612158565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e46542000000000000000000000000000000000000000000000000000000000815260008251611e95816004850160208701612158565b9190910160040192915050565b7f4e46542000000000000000000000000000000000000000000000000000000000815260008251611eda816004850160208701612158565b7f2069732061206d656d626572206f6620746865204e46542052414441000000006004939091019283015250602001919050565b6020815260006107da6020830184611e13565b6040815260008351604080840152611f3c6080840182611dbe565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152611f778282611e13565b925050508260208301529392505050565b604081526000835160806040840152611fa460c0840182611e13565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080858403016060860152611fe08383611e13565b92506040870151915080858403016080860152611ffd8383611dbe565b925060608701519150808584030160a086015250611f778282611e13565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261205057600080fd5b83018035915067ffffffffffffffff82111561206b57600080fd5b6020019150368190038213156119ac57600080fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156120c7576120c76122b2565b604052919050565b600067ffffffffffffffff8211156120e9576120e96122b2565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000821982111561212857612128612225565b500190565b60008261213c5761213c612254565b500490565b60008282101561215357612153612225565b500390565b60005b8381101561217357818101518382015260200161215b565b83811115610c0d5750506000910152565b600181811c9082168061219857607f821691505b602082108114156121d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561220a5761220a612225565b5060010190565b60008261222057612220612254565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212207a7e82beab6c17f6202fa3ef0ddc3e6ca5ab2f2651b7b993425fe9abf19125ee64736f6c63430008060033";

export interface RadaDescriptorLibraryAddresses {
  ["__$e1d8844a0810dc0e87a665b1f2b5fa7c69$__"]: string;
}
